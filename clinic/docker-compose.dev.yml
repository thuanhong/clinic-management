version: "3.0"
services:
  db:
    image: postgres:11.9-alpine
    environment:
      POSTGRES_DB: clinic
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: qeKmEKR52
    ports:
      - 5433:5432
    networks:
      - djangonetwork
  web-backend:
    build:
      context: .
      dockerfile: Dockerfile.dev
    image: 'clinic:latest'
    ports:
      - 8000:8000
    command: >
      sh -c "python3 manage.py makemigrations; \
            python3 manage.py migrate; \
            python3 manage.py loaddata permissions; \
            python3 manage.py loaddata groups; \
            python3 manage.py loaddata patients;\
            python3 manage.py loaddata payment;\
            echo \"from django.contrib.auth.models import User; User.objects.create_superuser('admin', 'admin@example.com', 'admin')\" | python3 manage.py shell; \
            echo \"from authentication.models import User; User.objects.create_user(username='t1',password='1')\" | python3 manage.py shell; \
            python3 manage.py runserver 0.0.0.0:8000"
    env_file:
      - .env
    environment:
      DB_HOST: db
      DATABASE_URL: postgres://admin:qeKmEKR52@db:5432/clinic
    depends_on:
      - db
      - rabbit
    links:
      - db:db
    networks:
      - djangonetwork
    # volumes:
    #   - "./:/app"
  rabbit:
    image: rabbitmq:3-management
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=password
    ports:
      - "5672:5672" # We forward this port because it's useful for debugging # Here, we can access RabbitMQ management plugin
    networks:
      - djangonetwork
  celery:
    image: "clinic:latest"
    # volumes:
    #   - "./:/app"
    networks:
      - djangonetwork
    command: celery -A clinic worker -l info -n clinic
    env_file:
      - .env
    environment:
      DATABASE_URL: postgres://athenauser:qeKmEKR52@db:5432/athena
    depends_on:
      - web-backend

networks:
    djangonetwork:
      driver: bridge
